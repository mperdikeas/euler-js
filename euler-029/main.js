'use strict';

console.log(`
Consider all integer combinations of a^b for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

2^2=4, 2^3=8, 2^4=16, 2^5=32
3^2=9, 3^3=27, 3^4=81, 3^5=243
4^2=16, 4^3=64, 4^4=256, 4^5=1024
5^2=25, 5^3=125, 5^4=625, 5^5=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by a^b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?


`);

let _ = require('underscore');




function findDistinctTerms(n) {
    var terms = [];
    for (let a = 2; a <=n ; a++) {
        for (let b = 2 ; b <=n ; b++) {
            let v = _.times(a, _=>b).reduce( (v,e)=>v*e, 1);
            if (false)
                console.log(`${a} raised to the power of ${b} is ${v}`);
            if (!_.contains(terms, v))
                terms.push(v);
        }
    }
    return terms.length;
}

assert(15, findDistinctTerms(5));

console.log(`Answer is ${findDistinctTerms(100)}`);


function assert(nExpected, nActual) {
    if (nExpected != nActual)
        throw new Error(`expected value to be: ${nExpected}, yet it was: ${nActual}`);
}
